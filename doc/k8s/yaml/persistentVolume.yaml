apiVersion: v1
kind: PersistentVolume
metadata:
  name: demo-persistent-volume
spec:
  storageClassName: storage-class-name-10m #pv手动管理所以名称随便
  accessModes:
  - ReadWriteMany # ReadWriteOnce可读写，只能被一个节点的pod挂载  ReadOnlyMany:可读，任意节点的pod挂载    ReadWriteMany:可读写，任意节点的pod挂载
  capacity:
    storage: 10Mi # 设备容量（用国际标准Ki/Mi/Gi）
  hostPath:
    path: /tmp/storage-class-name-10m/  #存储卷的本地路径,如果pod重建调度到其他node上，加载本地目录，也不会是之前存储的位置


---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: demo-persistent-volume-claim  #根据storageClassName与storage去匹配PV,找到即匹配
spec:
  storageClassName: storage-class-name-10m #pv相同
  accessModes:
  - ReadWriteOnce # ReadWriteOnce可读写，只能被一个节点的pod挂载  ReadOnlyMany:可读，任意节点的pod挂载    ReadWriteMany:可读写，任意节点的pod挂载
  resources:
    requests:
      storage: 5Mi #希望有多大的容量



---

apiVersion: v1
kind: Pod
metadata:
  name: demo-persistent-volume-claim-pod
spec:
  volumes:
  - name: pvc
    persistentVolumeClaim:
      claimName: demo-persistent-volume-claim

  containers:
  - image: nginx
    name: demo-persistent-volume-claim-pod

    ports:
    - containerPort: 80

    volumeMounts:
    - name: pvc
      mountPath: /tmp