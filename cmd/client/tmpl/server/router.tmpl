package router

import (
	"github.com/gin-gonic/gin"
	"{{.Page}}/activity/internal/service"
	"github.com/long250038728/web/protoc/{{.Server}}"
	"github.com/long250038728/web/tool/app"
	"github.com/long250038728/web/tool/server/http"
	"google.golang.org/grpc"
	"google.golang.org/grpc/health/grpc_health_v1"
)

func RegisterHTTPServer(engine *gin.Engine, srv *service.Service) {
	cache, _ := app.NewUtil().Cache()

	xxxGroup := engine.Group("/activity/xxx/").Use(http.BaseHandle(cache), http.LimitHandle(cache))
	{
		xxxGroup.POST("xxx", func(c *gin.Context) {
			//var request {{.Server}}.LoginRequest
			//http.SSE().Run(c, &request, func() (interface{}, error) {
			//	return srv.Login(c.Request.Context(), &request)
			//})
		})
	}
}

func RegisterGRPCServer(engine *grpc.Server, srv *service.Service) {
	{{.Server}}.RegisterAuthServer(engine, srv)
	grpc_health_v1.RegisterHealthServer(engine, srv)
}
